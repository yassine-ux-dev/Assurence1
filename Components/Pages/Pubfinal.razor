@page "/PF/{Id:int}"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext context
@using BlazorApp.Components.Bd
@inject NavigationManager Navigation
@using BlazorApp.Components.Model
@using Microsoft.AspNetCore.Components
@using BlazorApp.Components.Service
@inject AoService aoService
<style>
  .box {
    position: relative;

    font-family: Helvetica;
    color: #fff;
    background: rgba(0, 0, 0, 0.05);
    padding: 0px 10px;
  }

  .contact-left button {
    display: flex;
    align-items: center;
    padding: 15px 30px;
    font-size: 16px;
    gap: 10px;
    border: none;
    border-radius: 50px;
    ;
    cursor: pointer;

  }

  .contact-left button img {
    height: 15px;

  }
</style>
<div class="flex">
  <div style="width: 20px" class="timeline-container">
    <Timeline />
  </div>
  <EditForm Model="@ao" OnValidSubmit="@migrate" FormName="Posttd" class="w-full" method="post">
    <DataAnnotationsValidator />

    <div class="md:mt-20 flex flex-col md:flex-row items-center p-20" style="margin-top: 130px; gap: 20px;">

      <div class="contact-left ">
        <img src="/checklist.png" alt="Image" class="w-[500] rounded-lg " style="height: 500px;margin-left:10px ">
      </div>

      <div class="contact-left w-full md:w-1/2 md:pl-12" style="padding: 0px; padding-right: 200px;">
        <h5 class="text-4xl font-bold text-gray-900 leading-tight mb-4">
          Veuillez vérifier vos données avant de postuler.
        </h5>

        <div class="mb-4">
          <label>𝘛𝘪𝘵𝘳𝘦</label>
          <p class="form-control w-full" style="border: 3px solid #eee6ff; padding: 5px; font-weight: bold;">
            <i class="fas fa-check " style="margin-right: 5px;"></i>@ao.Titre
          </p>
        </div>

        <div class="input-box mb-4">
          <label>𝘋𝘦𝘴𝘤𝘳𝘪𝘱𝘵𝘪𝘰𝘯</label>
          <p id="message" class="form-control w-full"
            style="border: 3px solid #eee6ff; padding: 5px;  font-weight: bold;">
            <i class="fas fa-check" style="margin-right: 5px;"></i>@ao.Description
          </p>
        </div>

        <div class="column mb-4">
          <div class="input-box">
            <label>𝘋𝘦𝘭𝘢𝘪𝘴 𝘥𝘦 𝘳𝘦𝘱𝘰𝘯𝘴𝘦</label>
            <p class="form-control w-full" style="border: 3px solid #eee6ff; padding: 5px; font-weight: bold;">
              <i class="fas fa-check" style="margin-right: 5px;"></i>@ao.DelaisR
            </p>
          </div>
        </div>

        <div class="input-box address mb-4">
          <label>Budget</label>
          <p class="form-control w-full" style="border: 3px solid #eee6ff; padding: 5px; font-weight: bold;">
            <i class="fas fa-check" style="margin-right: 5px;"></i>@ao.Budget
          </p>
        </div>

        <div class="input-box address mb-4">
          <label>𝘈𝘥𝘥𝘳𝘦𝘴𝘴</label>
          <p class="form-control w-full" style="border: 3px solid #eee6ff; padding: 5px; font-weight: bold;">
            <i class="fas fa-check" style="margin-right: 5px;"></i>@ao.Adress
          </p>
        </div>
        <div class="flex justify-end space-x-4 items-center">
          <a href="@($"/post/{ao.Id}")" class="flex items-center">
            <button type="button"
              class="text-blue-500 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
              style="height: 35px;">
              Modifier
            </button>
          </a>
          <button type="submit"
            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            style="height: 35px;">
            Postuler
          </button>
        </div>

      </div>

    </div>
  </EditForm>



</div>





@code {
  [Parameter]
  public int Id { get; set; }

  private Brouillon ao { get; set; } = new Brouillon();
  private AO app { get; set; } = new AO();

  protected override async Task OnInitializedAsync()
  {
    // Retrieve the Brouillon entity from the database based on the Id parameter
    ao = await context.Brouillons.FirstOrDefaultAsync(b => b.Id == Id);

  }

  private async Task migrate()
  {
    Console.WriteLine("Aoffres updated successfully from Brouillon!");

    // Update Aoffres entity properties with values from the Brouillon entity (ao)
    app.Titre = ao.Titre;
    app.EmailA = ao.EmailA;
    app.Description = ao.Description;
    app.Adress = ao.Adress;
    app.DateDemande = ao.DateDemande;
    app.DelaisR = ao.DelaisR;
    app.Budget = ao.Budget;

    Console.WriteLine("Aoffre" + app.Budget);
    // Set the Aoffres entity's Id to the same value as the Brouillon entity's Id

    // Update the Aoffres entity instead of adding a new one
    await aoService.AddAo(app);
    aoService.DelBrouillon(ao);


    // Save changes to the database
    Navigation.NavigateTo("/Dashboard");
  }
}