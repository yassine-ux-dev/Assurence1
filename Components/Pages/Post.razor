@page "/reponse"
@using BlazorApp.Components.Model
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@using BlazorApp.Components.Service
@inject AoService aoService
@inject UserService userService
@using System

<div class="fixed top-0 left-0 w-full h-full flex justify-center items-center bg-black bg-opacity-50"
  style="width:  ? '200px' : 'auto'; z-index: 100000;">
  <div class="relative bg-gray-100 p-5 max-w-lg w-full rounded-lg shadow-lg">
    <form>
      <EditForm Model="@ao">

        <button type="submit" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 closeBtn">
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"
            class="w-4 h-4">
            <path
              d="M13.2328 2.7672C12.9984 2.53282 12.6187 2.53282 12.3843 2.7672L7.99993 7.1516L3.61553 2.7672C3.38115 2.53282 3.00147 2.53282 2.76709 2.7672C2.53271 3.00158 2.53271 3.38126 2.76709 3.61564L7.15149 8.00004L2.76709 12.3844C2.53271 12.6188 2.53271 12.9985 2.76709 13.2329C3.00147 13.4673 3.38115 13.4673 3.61553 13.2329L7.99993 8.84848L12.3843 13.2329C12.6187 13.4673 12.9984 13.4673 13.2328 13.2329C13.4672 12.9985 13.4672 12.6188 13.2328 12.3844L8.84837 8.00004L13.2328 3.61564C13.4672 3.38126 13.4672 3.00158 13.2328 2.7672Z"
              fill="currentColor"></path>
          </svg>
        </button>
      </EditForm>
    </form>


    <div class="text-xl lg:text-2xl font-bold text-secondary-base mb-4 justify-content-lg-start">Send form</div>
    <p class="flex justify-content-lg-start gap-4">Send<img src="/message.png"></p>
    <hr class="my-3 border-t border-gray-900 w-full">

    <div class="text-center">
      <EditForm Model="@ao" OnValidSubmit="@AddReponse" FormName="addreponse" methode="Post">
        <DataAnnotationsValidator />
        <div class="form-group">
          <label for="description">Description:</label>
          <InputTextArea id="message" class="form-control w-full" @bind-Value="Rp.Dettail" Required rows="4"
            placeholder=""></InputTextArea>
          <ValidationMessage For="() => ao.Description" />
        </div>
        <div class="form-group">
          <label for="prixproposer">Prix Proposer:</label>
          <InputNumber type="Number" id="prixproposer" @bind-Value="Rp.PrixProp" class="form-control" />
          <ValidationMessage For="@(() => Rp.PrixProp)" />
        </div>
        <div class="flex justify-end gap-2" style="margin-top: 30px;">
          <button type="submit"
            class="bg-white-500  text-black  border border-black py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            style="height: 35px;">Cancel</button>
          <button type="submit"
            class="bg-white-500  text-black font-bold border border-black py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            style="height: 35px;">Send</button>
        </div>

      </EditForm>

    </div>
  </div>
</div>
@code {



  @code {
    [SupplyParameterFromForm]
    private BlazorApp.Components.Model.Reponse Rp { get; set; } = new BlazorApp.Components.Model.Reponse();
    [Parameter]
    public int Id { get; set; }
    private Brouillon ao { get; set; } = new Brouillon();
    private Fournisseur fsr { get; set; } = new();
    private string mail;
    private async Task OnInitializedAsync()
    {
      mail = userService.GetEmailIdFromCookie();
      fsr = await userService.GetFournisseur(mail);
    }

    private async Task AddReponse()
    {
      Rp.IdFournisseur = fsr.Id;
      Rp.IdAoffre = Id;
      Rp.DateSaisie = DateTime.Now;
      await aoService.AddRp(Rp);
    }
    private bool Inscrire = false;
    private async Task HandleSubmit()
    {
      Inscrire = true;
    }
    private void HideInscriptionModal()
    {
      Inscrire = false;
    }

  }
}