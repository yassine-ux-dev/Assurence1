@using System
@inject AoService aoService
@using BlazorApp.Components.Model
@using BlazorApp.Components.Service

@inject NavigationManager Navigation
@inject UserService userService

<br><br><br><br><br>
@if (ao != null)
{

  <div class="p-2 mt-15 shadow-md max-w-[810px] mx-auto rounded-lg">

    <div class="text-xl font-bold text-white">@ao.Titre</div>
    <ul class="flex space-x-4">
      <li>
        <a href="#" data-toggle="modal" data-target="#sendMail"
          class="flex items-center space-x-1 text-white hover:text-blue-100">
          <a href="/Dashboard" title="< Back to results" class="backToResults mets-command-link">&lt; Back to
            results</a>

        </a>
      </li>
      <li>
        <a href="#" onclick="event.preventDefault(); printDiv();"
          class="flex items-center space-x-1 text-white hover:text-blue-100">


        </a>
      </li>
    </ul>


    <div class="mt-4 md:mt-0">


      <div class="border-2 border-Ocean-500 p-4">

        <legend class="text-blue-500 font-bold pt-1  pb-2 w-full max-w-[810px] mx-auto"
          style="border-top-color: transparent;">Demander un avis</legend>
        <p class="mt-4">Département(s) de publication : <b>@ao.Id</b></p>
        <hr class="my-4 border-t-2 border-blue-500">
        <p class="mt-4">Objet du marché : <b>Prestations de services d'assurances</b></p>

        <p>Courriel : <a href="@ao.EmailA" class="text-blue-500" target="_blank">@ao.EmailA</a></p>
        <p>Description:<a><b> @ao.Description</b></a></p>

        <p class="text-gray-800">Date de Demande:<strong> @ao.DateDemande.ToString("yyyy-MM-dd")</strong></p>
        <p class="text-gray-800">Délais de Réalisation:<strong> @ao.DelaisR.ToString("yyyy-MM-dd")</strong></p>
        <p class="text-gray-800">Adresse:<strong> @ao.Adress</strong></p>
        <p class="mt-4"><i><b>Documents</b> </i></p>

        @if (userService.IsAuthenticated())
        {
          if (userService.GetRoleFromCookie() == "Fournisseur")
          {
            <a href="/Send/@Id">
              <button type="submit" data-twe-ripple-init data-twe-ripple-color="light"
                class="me-3 inline-block rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 motion-reduce:transition-none dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong">
                Envoyer un offre
              </button>
            </a>
          }
        }
        @if (userService.IsAuthenticated())
        {
          if (userService.GetRoleFromCookie() == "Client")
          {
            <div class="form-actions">
              <a href="/reponses/@Id" style="color: #3b3a3a; text-decoration: none;">
                Voir les reponse de ce appele offre
              </a>
            </div>
          }
        }





      </div>

    </div>
  </div>

}





@code {



  [Parameter]
  public int Id { get; set; }



  public AO ao;
  public readonly struct ParameterView;


  private Fournisseur fsr { get; set; } = new();

  private bool Post = false;




  protected override async Task OnInitializedAsync()
  {
    // Load data asynchronously
    ao = await aoService.GetaoffreById(Id);
  }








}
